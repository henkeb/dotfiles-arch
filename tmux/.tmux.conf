#set -ga terminal-overrides ",xterm-255color*:Tc"
# set -g default-terminal "xterm-256color"
#set -g default-terminal "tmux-256color"
#set -ag terminal-overrides ",xterm-256color:RGB"
#set -g default-terminal "alacritty"
#set -ag terminal-overrides ",alacritty:RGB"
#set -g default-terminal "tmux-256color"
#set -g terminal-overrides ",alacritty:RGB"
#set-option -ga terminal-overrides ',*256col*:Tc'
# # needed for proper nvim/tmux/base16 colors
# set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",*:RGB"

# set -g  default-terminal "screen-256color"
# set -g terminal-overrides "screen-256color"

#set-option -g default-shell /usr/bin/zsh
# Fix esc delay
set -sg escape-time 10
set -g status-interval 1
# Fix home key
bind-key -n Home send Escape "OH"

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

######### THEME  ##########
set -g status-bg colour237
set -g status-fg colour245
set-option -g pane-active-border-style fg=colour239
set-option -g pane-border-style fg=colour237
set -g mode-style fg=colour235,bg=colour66
set-option -g message-style bg=colour66,fg=colour235

set-option -g status-left "[#S] "
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"

set-option -g status-right '#(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}") %H:%M:%S '
set-window-option -g window-status-separator " "

set-window-option -g window-status-current-format "#[fg=colour248]#W"
set-window-option -g window-status-format "#I:#W#F"
set-window-option -g window-status-style fg=colour245,dim
set-option -g status-position top

unbind r
bind r source-file ~/.tmux.conf

set -g base-index 1

# For scrolling
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
# focus events
set-option -g focus-events on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
# Plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore Vim sessions
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
set-window-option -gq utf8 on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
